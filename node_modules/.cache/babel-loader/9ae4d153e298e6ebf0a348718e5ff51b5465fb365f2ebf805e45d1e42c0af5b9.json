{"ast":null,"code":"var _jsxFileName = \"/home/astral/Documents/react-app/newapp/src/components/Docupload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentUploadContainer = styled.div`\n  text-align: center;\n`;\n_c = DocumentUploadContainer;\nconst DocumentInput = styled.input`\n  display: none;\n`;\n_c2 = DocumentInput;\nconst FileBox = styled.div`\n  border: 2px dashed #007bff;\n  padding: 20px;\n  display: inline-block;\n  border-radius: 5px;\n`;\n_c3 = FileBox;\nconst UploadButton = styled.label`\n  background-color: #007bff;\n  color: #fff;\n  padding: 10px 20px;\n  cursor: pointer;\n  border-radius: 5px;\n  display: inline-block;\n  margin-top: 10px;\n`;\n_c4 = UploadButton;\nconst SuccessMessage = styled.p`\n  color: green;\n  font-weight: bold;\n`;\n_c5 = SuccessMessage;\nconst DocumentUpload = () => {\n  _s();\n  const [isUploaded, setIsUploaded] = useState(false);\n  const handleFileUpload = event => {\n    // Perform file upload logic here\n    // You can send the selected file to a server or IPFS for actual file storage\n\n    setIsUploaded(true);\n  };\n  return /*#__PURE__*/_jsxDEV(DocumentUploadContainer, {\n    children: [/*#__PURE__*/_jsxDEV(FileBox, {\n      children: [/*#__PURE__*/_jsxDEV(DocumentInput, {\n        type: \"file\",\n        id: \"fileInput\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n        htmlFor: \"fileInput\",\n        children: \"Upload Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), isUploaded && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n      children: \"Uploaded Successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentUpload, \"gr3/QmgNaRk0s77sMk5pdY+/trE=\");\n_c6 = DocumentUpload;\nexport default DocumentUpload;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"DocumentUploadContainer\");\n$RefreshReg$(_c2, \"DocumentInput\");\n$RefreshReg$(_c3, \"FileBox\");\n$RefreshReg$(_c4, \"UploadButton\");\n$RefreshReg$(_c5, \"SuccessMessage\");\n$RefreshReg$(_c6, \"DocumentUpload\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","DocumentUploadContainer","div","_c","DocumentInput","input","_c2","FileBox","_c3","UploadButton","label","_c4","SuccessMessage","p","_c5","DocumentUpload","_s","isUploaded","setIsUploaded","handleFileUpload","event","children","type","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c6","$RefreshReg$"],"sources":["/home/astral/Documents/react-app/newapp/src/components/Docupload.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst DocumentUploadContainer = styled.div`\n  text-align: center;\n`;\n\nconst DocumentInput = styled.input`\n  display: none;\n`;\n\nconst FileBox = styled.div`\n  border: 2px dashed #007bff;\n  padding: 20px;\n  display: inline-block;\n  border-radius: 5px;\n`;\n\nconst UploadButton = styled.label`\n  background-color: #007bff;\n  color: #fff;\n  padding: 10px 20px;\n  cursor: pointer;\n  border-radius: 5px;\n  display: inline-block;\n  margin-top: 10px;\n`;\n\nconst SuccessMessage = styled.p`\n  color: green;\n  font-weight: bold;\n`;\n\nconst DocumentUpload = () => {\n  const [isUploaded, setIsUploaded] = useState(false);\n\n  const handleFileUpload = (event) => {\n    // Perform file upload logic here\n    // You can send the selected file to a server or IPFS for actual file storage\n\n    setIsUploaded(true);\n  };\n\n  return (\n    <DocumentUploadContainer>\n      <FileBox>\n        <DocumentInput type=\"file\" id=\"fileInput\" onChange={handleFileUpload} />\n        <UploadButton htmlFor=\"fileInput\">Upload Document</UploadButton>\n      </FileBox>\n      {isUploaded && <SuccessMessage>Uploaded Successfully</SuccessMessage>}\n    </DocumentUploadContainer>\n  );\n};\n\nexport default DocumentUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,uBAAuB,GAAGH,MAAM,CAACI,GAAI;AAC3C;AACA,CAAC;AAACC,EAAA,GAFIF,uBAAuB;AAI7B,MAAMG,aAAa,GAAGN,MAAM,CAACO,KAAM;AACnC;AACA,CAAC;AAACC,GAAA,GAFIF,aAAa;AAInB,MAAMG,OAAO,GAAGT,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GALID,OAAO;AAOb,MAAME,YAAY,GAAGX,MAAM,CAACY,KAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIF,YAAY;AAUlB,MAAMG,cAAc,GAAGd,MAAM,CAACe,CAAE;AAChC;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,cAAc;AAKpB,MAAMG,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMsB,gBAAgB,GAAIC,KAAK,IAAK;IAClC;IACA;;IAEAF,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACElB,OAAA,CAACC,uBAAuB;IAAAoB,QAAA,gBACtBrB,OAAA,CAACO,OAAO;MAAAc,QAAA,gBACNrB,OAAA,CAACI,aAAa;QAACkB,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,WAAW;QAACC,QAAQ,EAAEL;MAAiB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxE5B,OAAA,CAACS,YAAY;QAACoB,OAAO,EAAC,WAAW;QAAAR,QAAA,EAAC;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,EACTX,UAAU,iBAAIjB,OAAA,CAACY,cAAc;MAAAS,QAAA,EAAC;IAAqB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAE9B,CAAC;AAACZ,EAAA,CAnBID,cAAc;AAAAe,GAAA,GAAdf,cAAc;AAqBpB,eAAeA,cAAc;AAAC,IAAAZ,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAvB,GAAA;AAAAuB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAjB,GAAA;AAAAiB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}