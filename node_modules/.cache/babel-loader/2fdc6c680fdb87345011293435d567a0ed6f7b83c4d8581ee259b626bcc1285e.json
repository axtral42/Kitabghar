{"ast":null,"code":"var _jsxFileName = \"/home/astral/Documents/react-app/newapp/src/components/Pdfdownload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n_c = PageContainer;\nconst PdfCover = styled.div`\n  width: 200px;\n  height: 300px;\n  margin: 10px;\n  background-color: #f4f4f4;\n  border: 1px solid #ddd;\n  cursor: pointer;\n  transition: transform 0.2s;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n_c2 = PdfCover;\nconst PdfButton = styled.button`\n  background: #007bff;\n  color: #fff;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n_c3 = PdfButton;\nconst PdfPage = () => {\n  _s();\n  const [pdfs, setPdfs] = useState([{\n    id: 1,\n    name: \"PDF 1\"\n  }, {\n    id: 2,\n    name: \"PDF 2\"\n  }, {\n    id: 3,\n    name: \"PDF 3\"\n  }]);\n  const [downloadedPdf, setDownloadedPdf] = useState(null);\n  const handleGetPdf = pdfId => {\n    // Implement your PDF download logic here.\n    console.log(`Downloaded PDF with ID: ${pdfId}`);\n    setDownloadedPdf(pdfId);\n  };\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: pdfs.map(pdf => /*#__PURE__*/_jsxDEV(PdfCover, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: pdf.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PdfButton, {\n        onClick: () => handleGetPdf(pdf.id),\n        children: downloadedPdf === pdf.id ? \"Downloaded\" : \"Get PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, pdf.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfPage, \"lWE/kBseRi87Jx6QUZWUKapHroE=\");\n_c4 = PdfPage;\nexport default PdfPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"PdfCover\");\n$RefreshReg$(_c3, \"PdfButton\");\n$RefreshReg$(_c4, \"PdfPage\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","PageContainer","div","_c","PdfCover","_c2","PdfButton","button","_c3","PdfPage","_s","pdfs","setPdfs","id","name","downloadedPdf","setDownloadedPdf","handleGetPdf","pdfId","console","log","children","map","pdf","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c4","$RefreshReg$"],"sources":["/home/astral/Documents/react-app/newapp/src/components/Pdfdownload.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst PageContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PdfCover = styled.div`\n  width: 200px;\n  height: 300px;\n  margin: 10px;\n  background-color: #f4f4f4;\n  border: 1px solid #ddd;\n  cursor: pointer;\n  transition: transform 0.2s;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst PdfButton = styled.button`\n  background: #007bff;\n  color: #fff;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n\nconst PdfPage = () => {\n  const [pdfs, setPdfs] = useState([\n    { id: 1, name: \"PDF 1\" },\n    { id: 2, name: \"PDF 2\" },\n    { id: 3, name: \"PDF 3\" },\n  ]);\n  const [downloadedPdf, setDownloadedPdf] = useState(null);\n\n  const handleGetPdf = (pdfId) => {\n    // Implement your PDF download logic here.\n    console.log(`Downloaded PDF with ID: ${pdfId}`);\n    setDownloadedPdf(pdfId);\n  };\n\n  return (\n    <PageContainer>\n      {pdfs.map((pdf) => (\n        <PdfCover key={pdf.id}>\n          <h3>{pdf.name}</h3>\n          <PdfButton onClick={() => handleGetPdf(pdf.id)}>\n            {downloadedPdf === pdf.id ? \"Downloaded\" : \"Get PDF\"}\n          </PdfButton>\n        </PdfCover>\n      ))}\n    </PageContainer>\n  );\n};\n\nexport default PdfPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAI;AACjC;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,aAAa;AAKnB,MAAMG,QAAQ,GAAGN,MAAM,CAACI,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAhBID,QAAQ;AAkBd,MAAME,SAAS,GAAGR,MAAM,CAACS,MAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIF,SAAS;AAUf,MAAMG,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,CAC/B;IAAEgB,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,EACxB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,EACxB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,CACzB,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMoB,YAAY,GAAIC,KAAK,IAAK;IAC9B;IACAC,OAAO,CAACC,GAAG,CAAE,2BAA0BF,KAAM,EAAC,CAAC;IAC/CF,gBAAgB,CAACE,KAAK,CAAC;EACzB,CAAC;EAED,oBACElB,OAAA,CAACC,aAAa;IAAAoB,QAAA,EACXV,IAAI,CAACW,GAAG,CAAEC,GAAG,iBACZvB,OAAA,CAACI,QAAQ;MAAAiB,QAAA,gBACPrB,OAAA;QAAAqB,QAAA,EAAKE,GAAG,CAACT;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnB3B,OAAA,CAACM,SAAS;QAACsB,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAACM,GAAG,CAACV,EAAE,CAAE;QAAAQ,QAAA,EAC5CN,aAAa,KAAKQ,GAAG,CAACV,EAAE,GAAG,YAAY,GAAG;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA,GAJCJ,GAAG,CAACV,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEpB,CAAC;AAACjB,EAAA,CA1BID,OAAO;AAAAoB,GAAA,GAAPpB,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAAN,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}